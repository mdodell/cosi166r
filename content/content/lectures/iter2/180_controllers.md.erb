---
title: Rails controllers
desc: We jump deep into Rails controllers and MVC.
hwref: week8
cat: rails
---

#### Ongoing work
* **Project teams:** Although there are no specific deliverables, you should be following <%= link_to_section :intro, :term_project %>. Not just during lab and during your meetings, but on your own. Remember with a team of four (or 3 or 5) students, that's a lot of horsepower, and so we have high expectations. The sooner you kick into gear the better!
* **Rails PA 3** Working on <%= link_to_topic :pa_rails_3 %>. You can see the assigment and due dates here: <%= link_to_topic  :pa_rails_guide %>

### Today
* What is the "rails doctrine"?
* Take a picture for attendance
* Do Post-it-note exercise
    * Think about this course and the way I run it -- Not what you "like" or "don't like" but what you think is valuable for your future and what you think is less so
    * Please write down: What do you think is valuable; What do you want to see more of; What would you like to see less of

#### Project Status Discussion
* Where should we be right now with the projects?
* You should be meeting face to face at least once a week
* You should have a working Rails application with a working (but not 100% complete schema), with models, controlers and views, deployed to Heroku with seed data and working.
* Lets look at the schedule:
    1. March 6-11
    1. March 12-18
    1 March 19-25
    1. March 26-1
    1. April 2-8 (April 9-15 Are Break Week)
    1. April 16-22
    1. April 23-29
    1. April 30 - May 10 (Study period)
* May 11 (Final Presentations)
* You should distribute the work so each teammate has a separate piece of work to do
* Don't fuss right now with subtle algorithms, focus on the whole system

<%= include_topic :url_rails %>

$$SLIDE_TITLE  Job of the controller
* Recall, the URL is parsed by the router, which locates and calls the right controller
* Breaking it down:
    1. Router parses URL
    1. Determines the controller (error: Can't find Controller's ruby file in app/controllers/)
    1. Determines the action insider the controller (error: Can't find a method for the action)
    1. Calls the action method, with the parameters corresponding to the 'rest' of the url
    1. When action completes, a view of the same name is located (error: Can't find Views html.erb file in the `views/<controllername>/` directory)
    1. View's 'erb' is expanded and returned, through controller, router, web server, back to the user.

$$SLIDE_TITLE Resources in Rails
* Automatic wiring of plumbing between urls, routing, models, and controllers
* Takes advantage of standardized patterns
    * Nesting model in the URLs
    * CRUD operations as actions
    * Path naming (path_to_user instead of "http://www.mysite.com/user/3")
    * Controller naming
* Huge time saver and bug saver!

$$SLIDE_TITLE My addenda on getting the tricks work:

* YMMV - Sorry about the glitches on Friday!
* download GitHub with code from ActiveRecord tricks
* modify Gemfile to remove ruby version line
* delete .ruby-version file from the directory
* to see hidden files `ls -la`
* rails db:seed to generate seed files
* rails console to get to the prompt for rails commands
* Status.all to see all the records in the Status table
* app/comment.rb - delete default scope
* add gem 'hirb' to Gemfile; bundle
* in rails console, Hirb.enable


### Controller Actions: Review
* Who calls the controller action?
* What parameters are supplied automatically by the controller action?
* Why does it take two separate actions to implement "create"?

### Look at next class
* Look at homework <%= link_to_next_lecture %>
